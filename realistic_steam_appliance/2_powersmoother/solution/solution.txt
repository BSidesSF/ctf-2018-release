# generate a possible prime with at least b bits up to a max p - 1 prime factor of l
candidatep(b,l) = {my(p); p = 2; while(log(p)/log(2) < b, p = p * nextprime(random(l))); p + 1;}

# generate an actual prime up to b bits with a max p - 1 factor of l
divisiblep(b,l) = {my(p); p = 1; while(isprime(p) != 1, p = candidatep(b,l)); p}

GP/PARI> p = divisiblep(2048, 100000)
%5 = 1393037131043203879949561950623807659834796575115600408590303671693612061392945332268364797553360013992761419943892166662423411527621765928279626565925155527345227593286261963009024275014374832315347121979812222208393077938810856780607959872818301132396134798148152819003088662390237777507906470141390040827637510275335747985426836067586924896374232389842170566132226242218925135733937733460311180921875715666523269226711875796013424875220471303113453895847229078593492686565762874519924828681859635556748960375961483524375343844931245335740770117932247512241961024807734301869833702455829052514109945916763785605378963

GP/PARI> q = divisiblep(2048, 100000)
%6 = 5047414063756470682208833827210129068008642076149662203005735350794563590532671634667778444429227587268475068576415834028341717301399984124859312010214684387940285277898497161573250415434884924418952211386115544477045717483212245789734891683249305025199624222548907947505254105353073846060006023065093778714009682209178071404983192063653651583288661994825028819964655912466368354321060768854087653479985716943521270268845547554179227392700089609162659121106460679192354781109141283055567846606085698743068612581704177108372759786311549262730759735872934802289055575202484199770057654995310586951460060444588944541965927

GP/PARI> n = p * q
%7 = 7031235206562432873096071806320380021885571216970692389238998834604672249662551691076025597689019062012039953856822002247154407678115390047154668613044686587075530427762125851499475501101556434950873358127781301932854257294199105409946739604581501957771396967785296949130260600409327521778904760575941968180056664397129878908757080736295960553392122399778816622962520574968427728122536536621244998490592614349855643722227681208385467850429539951260423298022084764062274939676590444601521916308386173869092893319690070096923690228128839947040228557488377299381543675528439024437327905769194148806412091352870246548272023350020564932037644087292597584998961450234846937364334857355928813122235700031195373538375823789130526510240057579990576480821325983391392902581176833777713569143667045892335560152190097088932005408996199500170178961642344774047788586389326949319718118730890039814006425399887812613962243345912210115315997398439897713486539272653544539109202815551411264675123082904708970909423841099676040812379167313425643674155377492810536042476350771800280038304547716488440100801022741319897951630145656661215613874785204651398185175713266409555464318287861898734999405080724536632902680845983827895723217154363785633537868593701

GP/PARI> pollard_p1(n) = {my(a = Mod(2,n)); my(g = 1); my(p = 2); while(g == 1, a = a^(p^floor(log(n)/log(p))); g = gcd(lift(a) - 1, n); p = nextprime(p + 1);); print(g);}
GP/PARI> pollard_p1(n)



brenrigh@lambda ~ $ ecm -pm1 100000 < test.txt
GMP-ECM 6.4.4 [configured with GMP 6.1.2, --enable-asm-redc] [P-1]
Input number is 7031235206...7868593701 (1237 digits)
Using B1=100000, B2=49166862, polynomial x^1, x0=4221490992
Step 1 took 1123ms
********** Factor found in step 1: 1393037131043203879949561950623807659834796575115600408590303671693612061392945332268364797553360013992761419943892166662423411527621765928279626565925155527345227593286261963009024275014374832315347121979812222208393077938810856780607959872818301132396134798148152819003088662390237777507906470141390040827637510275335747985426836067586924896374232389842170566132226242218925135733937733460311180921875715666523269226711875796013424875220471303113453895847229078593492686565762874519924828681859635556748960375961483524375343844931245335740770117932247512241961024807734301869833702455829052514109945916763785605378963
Found probable prime factor of 619 digits: 1393037131043203879949561950623807659834796575115600408590303671693612061392945332268364797553360013992761419943892166662423411527621765928279626565925155527345227593286261963009024275014374832315347121979812222208393077938810856780607959872818301132396134798148152819003088662390237777507906470141390040827637510275335747985426836067586924896374232389842170566132226242218925135733937733460311180921875715666523269226711875796013424875220471303113453895847229078593492686565762874519924828681859635556748960375961483524375343844931245335740770117932247512241961024807734301869833702455829052514109945916763785605378963
Probable prime cofactor 5047414063756470682208833827210129068008642076149662203005735350794563590532671634667778444429227587268475068576415834028341717301399984124859312010214684387940285277898497161573250415434884924418952211386115544477045717483212245789734891683249305025199624222548907947505254105353073846060006023065093778714009682209178071404983192063653651583288661994825028819964655912466368354321060768854087653479985716943521270268845547554179227392700089609162659121106460679192354781109141283055567846606085698743068612581704177108372759786311549262730759735872934802289055575202484199770057654995310586951460060444588944541965927 has 619 digits
Report your potential champion to Paul Zimmermann <zimmerma@loria.fr>
(see http://www.loria.fr/~zimmerma/records/Pminus1.html)

brenrigh@lambda ~/download/rsatool $ openssl rsautl -in pm_flag.txt -inkey pm.combo -encrypt -out pm.enc
brenrigh@lambda ~/download/rsatool $ openssl rsautl -in pm.enc -inkey pm.combo -decrypt
FLAG[maybepowersmoothisabadidea]

